"""Integration tests data
"""
from typing import Any


def text_header_f3() -> list[str]:
    return [
        "C 1 Cropped F3 2-byte integer data set                                          ",
        "C 2 This file is a cropped copy of the F3 block in the Dutch North Sea          ",
        "C 3 This copy was obtained from                                                 ",
        "C 4 https://www.opendtect.org/osr/Main/NetherlandsOffshoreF3BlockComplete4GB    ",
        "C 5 and was created by inclusively extracting:                                  ",
        "C 6     inlines:    111 .. 133                                                  ",
        "C 7     crosslines: 875 .. 892                                                  ",
        "C 8     samples:      0 .. 300                                                  ",
        "C 9                                                                             ",
        "C10 This file is cropped and modified with the intention of unit testing segyio ",
        "C11                                                                             ",
        "C12                                                                             ",
        "C13                                                                             ",
        "C14                                                                             ",
        "C15                                                                             ",
        "C16                                                                             ",
        "C17                                                                             ",
        "C18                                                                             ",
        "C19                                                                             ",
        "C20                                                                             ",
        "C21                                                                             ",
        "C22                                                                             ",
        "C23                                                                             ",
        "C24                                                                             ",
        "C25                                                                             ",
        "C26                                                                             ",
        "C27                                                                             ",
        "C28                                                                             ",
        "C29                                                                             ",
        "C30                                                                             ",
        "C31                                                                             ",
        "C32                                                                             ",
        "C33                                                                             ",
        "C34                                                                             ",
        "C35                                                                             ",
        "C36                                                                             ",
        "C37                                                                             ",
        "C38                                                                             ",
        "C39                                                                             ",
        "C40                                                                             "]

def binary_header_f3() -> dict[str, Any]:
    return {
        "job_id": 1,
        "line_num": 0,
        "reel_num": 0,
        "data_traces_per_ensemble": 0,
        "aux_traces_per_ensemble": 0,
        "sample_interval": 4000,
        "orig_sample_interval": 0,
        "samples_per_trace": 75,
        "orig_samples_per_trace": 0,
        "data_sample_format": 3,
        "ensemble_fold": 0,
        "trace_sorting_code": 4,
        "vertical_sum_code": 0,
        "sweep_freq_start": 0,
        "sweep_freq_end": 0,
        "sweep_length": 0,
        "sweep_type_code": 0,
        "sweep_trace_num": 0,
        "sweep_taper_start": 0,
        "sweep_taper_end": 0,
        "taper_type_code": 0,
        "correlated_data_code": 0,
        "binary_gain_code": 0,
        "amp_recovery_code": 0,
        "measurement_system_code": 1,
        "impulse_polarity_code": 0,
        "vibratory_polarity_code": 0,
        "fixed_length_trace_flag": 1,
        "num_extended_text_headers": 0,
        "segy_revision_major": 1,
        "segy_revision_minor": 0
    }